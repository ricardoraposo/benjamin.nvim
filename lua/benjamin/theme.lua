local p = require("benjamin.palette")

local function hl(group, values)
	vim.api.nvim_set_hl(0, group, values)
end

local theme = {}

theme.set_hl = function()
	hl("Normal", { bg = p.bg, fg = p.fg })
	hl("CursorLine", { bg = "NONE", fg = "NONE" })
	hl("LineNr", { bg = "NONE", fg = p.gray })
	hl("CursorLineNr", { bg = "NONE", fg = p.yellow })
	hl("ColorColumn", { bg = p.bg_2, fg = "NONE" })
	hl("Comment", { bg = "NONE", fg = p.comment_gray, italic = true })
	hl("SpecialComment", { bg = "NONE", fg = p.orange, italic = true })
	hl("DiffText", { bg = "NONE", fg = p.yellow })
	hl("DiffDelete", { bg = "NONE", fg = p.white_2 })
	hl("DiffAdd", { bg = "NONE", fg = p.yellow })
	hl("ErrorMsg", { bg = "NONE", fg = p.white_2 })
	hl("WarningMsg", { bg = "NONE", fg = p.white_2 })
	hl("PreProc", { bg = "NONE", fg = p.white_2 })
	hl("Exception", { bg = "NONE", fg = p.white_2 })
	hl("Error", { bg = "NONE", fg = p.white_2 })
	hl("Identifier", { bg = "NONE", fg = p.white_2 })
	hl("PMenuSel", { bg = "NONE", fg = p.yellow, bold = true })
	hl("Type", { bg = "NONE", fg = p.niagara })
	hl("Constant", { bg = "NONE", fg = p.fg })
	hl("Repeat", { bg = "NONE", fg = p.yellow })
	hl("Keyword", { fg = p.yellow, bg = "NONE" })
	hl("IncSearch", { fg = p.white_2, bg = p.niagara })
	hl("Title", { fg = p.gray_2, bg = "NONE" })
	hl("PreCondit", { fg = p.gray_2, bg = "NONE" })
	hl("Debug", { fg = p.gray_2, bg = "NONE" })
	hl("SpecialChar", { fg = p.gray_2, bg = "NONE" })
	hl("Conditional", { fg = p.yellow, bg = "NONE" })
	hl("Todo", { fg = p.gray_2, bg = "NONE" })
	hl("Special", { fg = p.gray_2, bg = "NONE" })
	hl("Label", { fg = p.gray_2, bg = "NONE" })
	hl("Delimiter", { fg = p.gray_2, bg = "NONE" })
	hl("Number", { fg = p.gray_2, bg = "NONE" })
	hl("Define", { fg = p.gray_2, bg = "NONE" })
	hl("MoreMsg", { fg = p.gray_2, bg = "NONE" })
	hl("Tag", { fg = p.gray_2, bg = "NONE" })
	hl("String", { fg = p.green, bg = "NONE" })
	hl("MatchParen", { fg = p.gray_2, bg = "NONE" })
	hl("Macro", { fg = p.gray_2, bg = "NONE" })
	hl("DiffChange", { fg = p.gray_2, bg = "NONE" })
	hl("Function", { fg = p.white, bg = "NONE" })
	hl("Directory", { fg = p.yellow, bg = "NONE", bold = true })
	hl("Include", { fg = p.yellow, bg = "NONE" })
	hl("Storage", { fg = p.yellow, bg = "NONE" })
	hl("Statement", { fg = p.white_2, bg = "NONE" })
	hl("Operator", { fg = p.white_2, bg = "NONE" })
	hl("cssAttr", { fg = p.white_2, bg = "NONE" })
	hl("NormalFloat", { fg = "NONE", bg = "NONE" })
	hl("Pmenu", { fg = p.fg_2, bg = p.gray })
	hl("SignColumn", { bg = "NONE" })
	hl("Title", { fg = p.fg_2 })
	hl("NonText", { fg = p.fg_3, bg = "NONE" })
	hl("TabLineFill", { bg = p.gray })
	hl("TabLine", { fg = p.blue_2, bg = p.gray })
	hl("StatusLine", { bold = true, bg = p.gray, fg = p.fg_2 })
	hl("StatusLineNC", { bg = p.bg, fg = p.fg_2 })
	hl("Search", { bg = p.orange, fg = p.fg_2 })
	hl("VertSplit", { fg = p.gray, bg = "NONE" })
	hl("Visual", { bg = p.gray })

	-- Vimwiki stuff
	hl("VimwikiHeader1", { fg = p.yellow })
	hl("VimwikiHeader2", { fg = p.yellow_2 })
	hl("VimwikiHeader3", { fg = p.yellow_3 })
	hl("VimwikiHeader4", { fg = p.yellow_4 })

	--Git stuff
	hl("GitGutterAdd", { bg = "NONE", fg = p.yellow })
	hl("GitGutterDelete", { bg = "NONE", fg = p.white_2 })
	hl("GitGutterChangeDelete", { bg = "NONE", fg = p.white_2 })
	hl("GitGutterChange", { fg = p.gray_2, bg = "NONE" })

	-- Language Stuff
	hl("cssIdentifier", { bg = "NONE", fg = p.white_2 })
	hl("cssImportant", { bg = "NONE", fg = p.white_2 })
	hl("cssIncludeKeyword", { bg = "NONE", fg = p.yellow })
	hl("cssColor", { fg = p.gray_2, bg = "NONE" })
	hl("cssClassName", { fg = p.yellow, bg = "NONE" })
	hl("cssClassNameDot", { fg = p.yellow, bg = "NONE" })
	hl("javaScriptBoolean", { fg = p.yellow, bg = "NONE" })
	hl("markdownLinkText", { fg = p.yellow, bg = "NONE" })

	-- Treesitter stuff
	hl("TSType", { fg = p.quartz, bg = "NONE" })
	hl("TSFunction", { fg = p.white, bg = "NONE" })
	hl("TSParameter", { fg = p.white, bg = "NONE", bold = true })
	hl("TSVariableBuiltin", { fg = p.yellow, bg = "NONE", bold = true })
	hl("TSError", { fg = p.red, bg = "NONE" })
	hl("TSWarning", { fg = p.orange, bg = "NONE" })
end

return theme
